-- USE Master
-- DROP DATABASE ErrorMonitoring
--GO

CREATE DATABASE ErrorMonitoring;
GO

USE ErrorMonitoring;
GO

-- A frequência do log pode ser contada com o Count

CREATE TABLE EVENTS(
EventID INT PRIMARY KEY IDENTITY,
EventStatus VARCHAR(255) NOT NULL,
EventLevel VARCHAR(255) NOT NULL,
EventOrigin VARCHAR(255),
EventDate DATE NOT NULL,
EventMessage VARCHAR(255),
EventDescription VARCHAR(255),
EventException VARCHAR(MAX)
);
GO

CREATE TABLE ENVIRONMENTS(
EnvironmentID INT PRIMARY KEY IDENTITY,
EnvironmentName VARCHAR(255) NOT NULL
);
GO

CREATE TABLE TECNOLOGYS(
TecnologyID INT PRIMARY KEY IDENTITY,
TecnologyName VARCHAR(255) NOT NULL,
TecnologyDescription VARCHAR(255) 
);
GO

CREATE TABLE PROJECTS(
ProjectID INT PRIMARY KEY IDENTITY,
ProjectName VARCHAR(255) NOT NULL,
IsMobile BIT DEFAULT 0,
IsWeb BIT DEFAULT 0,
IsDesktop BIT DEFAULT 0
);
GO

CREATE TABLE PROJECTS_ENVIRONMENTS(
ProjEnvID INT PRIMARY KEY IDENTITY,
Project INT FOREIGN KEY REFERENCES PROJECTS(ProjectID)  NOT NULL,
Environment INT FOREIGN KEY REFERENCES  ENVIRONMENTS(EnvironmentID)  NOT NULL
);
GO

CREATE TABLE PROJECTS_TECNOLOGYS(
ProjTecnID INT PRIMARY KEY IDENTITY,
Project INT FOREIGN KEY REFERENCES PROJECTS(ProjectID) NOT NULL,
TecnologyProg INT FOREIGN KEY REFERENCES TECNOLOGYS(TecnologyID) NOT NULL
);
GO


CREATE TABLE USERS(
UserID INT PRIMARY KEY IDENTITY,
UserName VARCHAR(255) NOT NULL,
CPF VARCHAR(14) NOT NULL,
Email VARCHAR(150) NOT NULL,
UserHash VARCHAR(255) NOT NULL,
Contact VARCHAR(20),
Gender VARCHAR(70) NOT NULL,
Photo VARBINARY(MAX),
IsAdmin BIT DEFAULT 0
);
GO


CREATE TABLE LOGS(
LogID INT PRIMARY KEY IDENTITY,
Responsible INT FOREIGN KEY REFERENCES USERS(UserID) NOT NULL,
Project INT FOREIGN KEY REFERENCES PROJECTS(ProjectID) NOT NULL,
EventType INT FOREIGN KEY REFERENCES EVENTS(EventID) NOT NULL,
LogFile BIT DEFAULT 0
);
GO

CREATE TABLE PROJECTS_USERS(
ProjUsersID INT PRIMARY KEY IDENTITY,
Project INT FOREIGN KEY REFERENCES PROJECTS(ProjectID) NOT NULL,
Responsible INT FOREIGN KEY REFERENCES USERS(UserID)  NOT NULL
);
GO

